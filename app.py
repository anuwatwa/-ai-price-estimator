
import streamlit as st
import joblib
import numpy as np

model = joblib.load("linear_regression_price_model_with_floors.pkl")

st.title("üèóÔ∏è Beam AI ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô")

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û
house_types = {
    "‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡∏∂‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": {"‡∏ï‡πà‡∏≥": 12400, "‡∏Å‡∏•‡∏≤‡∏á": 14000, "‡∏™‡∏π‡∏á": 16300},
    "‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡∏∂‡∏Å 2 ‡∏ä‡∏±‡πâ‡∏ô (‡∏£‡∏∞‡∏ö‡∏ö precast)": {"‡∏Å‡∏•‡∏≤‡∏á": 11800},
    "‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡∏∂‡∏Å 2-3 ‡∏ä‡∏±‡πâ‡∏ô": {},
    "‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏ù‡∏î‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß": {}
}

quality_explain = {
    "‡∏ï‡πà‡∏≥": [
        "1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ‡∏™‡∏•.",
        "2. ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏°‡∏∏‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏•‡∏≠‡∏ô",
        "3. ‡∏û‡∏∑‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏ö‡∏∏‡∏ú‡∏¥‡∏ß ‡∏Ç‡∏±‡∏î‡∏°‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö",
        "4. ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ ‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô/‡∏ú‡∏ô‡∏±‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å",
        "5. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÑ‡∏°‡πâ‡∏≠‡∏±‡∏î‡∏¢‡∏≤‡∏á",
        "6. ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏•‡∏π‡∏°‡∏µ‡πÄ‡∏ô‡∏µ‡∏¢‡∏°"
    ],
    "‡∏Å‡∏•‡∏≤‡∏á": [
        "1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ‡∏™‡∏•.",
        "2. ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏°‡∏∏‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà",
        "3. ‡∏ù‡πâ‡∏≤‡πÄ‡∏û‡∏î‡∏≤‡∏ô‡∏¢‡∏¥‡∏ö‡∏ã‡∏±‡πà‡∏°‡∏ö‡∏≠‡∏£‡πå‡∏î ‡πÄ‡∏Ñ‡∏£‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏¢‡πÅ‡∏Ç‡∏ß‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô",
        "4. ‡∏û‡∏∑‡πâ‡∏ô‡∏õ‡∏π‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô",
        "5. ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ ‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô/‡∏ú‡∏ô‡∏±‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏™‡πâ‡∏ß‡∏°‡∏ô‡∏±‡πà‡∏á‡∏£‡∏≤‡∏ö ‡∏≠‡πà‡∏≤‡∏á‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥",
        "6. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÑ‡∏°‡πâ‡∏≠‡∏±‡∏î‡∏¢‡∏≤‡∏á",
        "7. ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏•‡∏π‡∏°‡∏µ‡πÄ‡∏ô‡∏µ‡∏¢‡∏°"
    ],
    "‡∏™‡∏π‡∏á": [
        "1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ‡∏™‡∏•.",
        "2. ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏°‡∏∏‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà",
        "3. ‡∏ù‡πâ‡∏≤‡πÄ‡∏û‡∏î‡∏≤‡∏ô‡∏¢‡∏¥‡∏ö‡∏ã‡∏±‡πà‡∏°‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏â‡∏≤‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö",
        "4. ‡∏û‡∏∑‡πâ‡∏ô ‡∏õ‡∏π‡∏õ‡∏≤‡∏£‡πå‡πÄ‡∏Å‡πâ‡∏ä‡∏ô‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏•‡∏¥‡πâ‡∏ô‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô‡∏¢‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 8 ‡∏ô‡∏¥‡πâ‡∏ß",
        "5. ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ ‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô/‡∏ú‡∏ô‡∏±‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏à‡∏£‡∏î‡πÄ‡∏û‡∏î‡∏≤‡∏ô ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏°‡∏µ‡∏≠‡πà‡∏≤‡∏á‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥",
        "6. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏ó‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏™‡∏µ‡∏ä‡∏≤‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏•‡∏π‡∏°‡∏µ‡πÄ‡∏ô‡∏µ‡∏¢‡∏°",
        "7. ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏Å‡∏£‡∏≠‡∏ö‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏•‡∏π‡∏°‡∏µ‡πÄ‡∏ô‡∏µ‡∏¢‡∏°",
        "8. ‡∏ú‡∏ô‡∏±‡∏á‡∏ö‡∏∏‡∏ß‡∏≠‡∏•‡∏•‡πå‡πÄ‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô/‡∏ú‡∏ô‡∏±‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö"
    ]
}

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å dropdown
house = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô", list(house_types.keys()))
quality = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û", ["‡∏ï‡πà‡∏≥", "‡∏Å‡∏•‡∏≤‡∏á", "‡∏™‡∏π‡∏á"])

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠ ‡∏ï‡∏£.‡∏°.
auto_price = house_types.get(house, {}).get(quality)
if auto_price:
    st.success(f"‚úÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠ ‡∏ï‡∏£.‡∏°. ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ: {auto_price:,} ‡∏ö‡∏≤‡∏ó")
else:
    st.warning("‚ö†Ô∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏•‡∏≤‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á")

# ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û
with st.expander("üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û"):
    for item in quality_explain[quality]:
        st.markdown(f"- {item}")

# ‡∏£‡∏±‡∏ö input
price = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏°‡∏ï‡∏£ (‡∏ö‡∏≤‡∏ó)", min_value=6000, max_value=20000,
                        value=auto_price if auto_price else 10000)
area = st.number_input("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≠‡∏¢ (‡∏ï‡∏£.‡∏°.)", min_value=30.0, max_value=400.0, value=120.0)
floors = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô", min_value=1, max_value=2, value=2)

# ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
if st.button("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á"):
    X = np.array([[price, area, floors]])
    y_pred = model.predict(X)
    st.success(f"üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£: {round(y_pred[0]):,} ‡∏ö‡∏≤‡∏ó")

